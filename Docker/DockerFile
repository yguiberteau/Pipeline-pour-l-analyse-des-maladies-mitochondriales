# Utilisation d'une image de base
FROM ubuntu

######################################
##### INSTALLATION DES LOGICIELS #####
######################################

#Installation des dépendances
RUN apt-get update && apt-get install --no-install-recommends -y \
    libncurses5-dev \
    libbz2-dev \
    liblzma-dev \
    libcurl4-gnutls-dev \
    zlib1g-dev \
    libssl-dev \
    gcc \
    wget \
    make \
    perl \
    bzip2 \
    gnuplot \
    ca-certificates \
    gawk && \
    apt-get autoclean && rm -rf /var/lib/apt/lists/*


###### INSTALLATIONS DE SAMTOOLS ######
ARG SAMTOOLSVER=1.13

RUN wget https://github.com/samtools/samtools/releases/download/${SAMTOOLSVER}/samtools-${SAMTOOLSVER}.tar.bz2 && \
    tar -xjf samtools-${SAMTOOLSVER}.tar.bz2 && \
    rm samtools-${SAMTOOLSVER}.tar.bz2 && \
    cd samtools-${SAMTOOLSVER} && \
    ./configure && \
    make && \
    make install && \
    cd .. && \
    rm -rf samtools-${SAMTOOLSVER} && \
    mkdir /data

RUN apt-get update && apt-get install -y git


###### INSTALLATION DE PICARD TOOLS ######

# Paquages et dependances 
RUN apt-get update && apt-get install -y default-jre wget

# Picard Tools
RUN wget https://github.com/broadinstitute/picard/releases/download/2.25.6/picard.jar

# Déplacer picard.jar vers le bon emplacement
RUN mv picard.jar /usr/local/bin/picard.jar

ENV PICARD_HOME /usr/local/bin


###### INSTALLATION DE GATK ######

RUN apt-get update && apt-get install -y \
    openjdk-8-jdk \
    curl \
    unzip

RUN curl -L -o gatk.zip "https://github.com/broadinstitute/gatk/releases/download/4.2.0.0/gatk-4.2.0.0.zip"

RUN unzip gatk.zip && rm gatk.zip

ENV PATH="/path/to/gatk:${PATH}"

############################################################
####### CREATION DES RÉPERTOIRE ET CLONAGE DU GITHUB #######
############################################################

WORKDIR /
# Creation du répertoire dans lequel sera présent les scripts du github
RUN mkdir /github

# Creation du répertoire output qui se sera transferer sur le répertoire de l'orinateur de l'utilisateur 
RUN mkdir /output 

WORKDIR /github


# Clone du référentiel GitHub, copie de son contenu dans le répertoire "github"
RUN git clone https://github.com/yguiberteau/Pipeline-pour-l-analyse-des-maladies-mitochondriales.git /tmp/repo && \
    cd /tmp/repo && \
    # il faut faire un pull afin d'avoir toujours la dernière verson du github
    git pull && \ 
    cp -r /tmp/repo/* /github && \
    rm -rf /tmp/repo

RUN mkdir -p /.github/workflows

# Création du fichier "benzinzin.txt"
RUN echo "Contenu du fichier benzinzin.txt" > /data/benzinzin.txt

WORKDIR /

# Copier le fichier FASTQ dans le conteneur
COPY IonXpress_011.fastq /data/IonXpress_011.fastq

# On se place dans le répertoire contenant le script à exécuter
WORKDIR /github/Allignement/scripts

# autorisation d'exécuter le script
RUN chmod +x script2.sh

# Execution du script
RUN sh script2.sh

# Instruction CMD pour exécuter une commande par défaut lorsque le conteneur est démarré
CMD tail -f /dev/null

# Exécuter le script script1.sh

# Instruction CMD pour exécuter une commande par défaut lorsque le conteneur est démarré
CMD tail -f /dev/null


